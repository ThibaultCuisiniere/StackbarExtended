ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff = 0.1,
group = "leak",
kw_cutoff = 0.1,
multigrp_strat = TRUE,
lda_cutoff = 2,
# taxa_rank = 'Species'
)
head(marker_table(mm_lefse))
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff = 0.05,
group = "leak",
kw_cutoff = 0.05,
multigrp_strat = TRUE,
lda_cutoff = 2,
# taxa_rank = 'Species'
)
head(marker_table(mm_lefse))
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff = 0.05,
group = "leak",
kw_cutoff = 0.05,
lda_cutoff = 2,
# taxa_rank = 'Species'
)
head(marker_table(mm_lefse))
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff = 0.05,
group = "leak",
kw_cutoff = 0.05,
lda_cutoff = 3,
# taxa_rank = 'Species'
)
head(marker_table(mm_lefse))
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
marker_table(mm_lefse)
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff = 0.05,
group = "leak",
kw_cutoff = 0.05,
lda_cutoff = 4,
# taxa_rank = 'Species'
)
head(marker_table(mm_lefse))
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff = 0.05,
group = "leak",
kw_cutoff = 0.05,
lda_cutoff = 2,
taxa_rank = 'Species'
)
head(marker_table(mm_lefse))
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
ggsave(filename = paste0("Lefse_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
ggsave(filename = paste0("Lefse__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
plot_ef_bar(mm_lefse)
plot_ef_dot(mm_lefse)
pc <- plot_cladogram(mm_lefse, color = c(no_leak = "darkgreen", leak = "red")) +
theme(plot.margin = margin(0, 0, 0, 0))
pc <- plot_cladogram(mm_lefse, color = c(no_leak = "darkgreen", leak = "red")) +
theme(plot.margin = margin(0, 0, 0, 0))
ps_mice <- subset_samples(ps, group == 'post-fmt')
#filter only this group, present in at leat 10% of the sample (n = 54)
dim(sample_data(ps_mice))
dim(otu_table(ps_mice))
ps_mice <- filter_taxa(ps_mice, function(x){sum(x > 0) > 6}, prune = TRUE)
sample_sums(ps_mice)
dim(otu_table(ps_mice))
head(sample_data(ps_mice))
#View(tax_table(ps_mice))
# ps_mice <- tax_glom(ps_mice, "Species", NArm = F)
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff = 0.05,
group = "leak",
kw_cutoff = 0.05,
lda_cutoff = 2,
taxa_rank = 'Species'
)
head(marker_table(mm_lefse))
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
pc <- plot_cladogram(mm_lefse, color = c(no_leak = "darkgreen", leak = "red")) +
theme(plot.margin = margin(0, 0, 0, 0))
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff = 0.05,
group = "leak",
kw_cutoff = 0.05,
lda_cutoff = 2,
#taxa_rank = 'Species'
)
pc <- plot_cladogram(mm_lefse, color = c(no_leak = "darkgreen", leak = "red")) +
theme(plot.margin = margin(0, 0, 0, 0))
pc
ggsave(filename = paste0("Cladogramm_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
ggsave(filename = paste0("Cladogramm__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
pc <- plot_cladogram(mm_lefse, color = c(no_leak = "darkgreen", leak = "red")) +
theme(plot.margin = margin(0, 0, 0, 0))
pc
ggsave(filename = paste0("Cladogramm_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 45, height = 40, units = "cm" )
ggsave(filename = paste0("Cladogramm__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 45, height = 40, units = "cm" )
minTotRelAbun = 5e-5
# normalize in relative abundance
ps_mice <- subset_samples(ps, group == 'post-fmt')
dim(sample_data(ps_mice))
dim(otu_table(ps_mice))
minTotRelAbun = 5e-5
x = taxa_sums(ps_mice)
x
keepTaxa = taxa_names(ps_mice)[which((x / sum(x)) > minTotRelAbun)]
keepTaxa
prunedSet = prune_taxa(keepTaxa, ps_mice)
prunedSet
ps_mice <- prunedSet
sample_sums(ps_mice)
dim(otu_table(ps_mice))
head(sample_data(ps_mice))
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff = 0.05,
group = "leak",
kw_cutoff = 0.05,
lda_cutoff = 2,
#taxa_rank = 'Species'
)
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff = 0.05,
group = "leak",
kw_cutoff = 0.05,
lda_cutoff = 4,
#taxa_rank = 'Species'
)
head(marker_table(mm_lefse))
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
#transform = "log10",
wilcoxon_cutoff = 0.05,
group = "leak",
kw_cutoff = 0.05,
lda_cutoff = 4,
#taxa_rank = 'Species'
)
head(marker_table(mm_lefse))
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
View(marker_table(mm_lefse))
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
#transform = "log10",
wilcoxon_cutoff = 0.06,
group = "leak",
kw_cutoff = 0.06,
lda_cutoff = 4,
#taxa_rank = 'Species'
)
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
#transform = "log10",
wilcoxon_cutoff = 0.06,
group = "leak",
kw_cutoff = 0.06,
lda_cutoff = 4,
#taxa_rank = 'Species'
)
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
ggsave(filename = paste0("Lefse_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
ggsave(filename = paste0("Lefse__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
# bar plot
plot_ef_bar(mm_lefse)
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
#transform = "log10",
wilcoxon_cutoff =1,
group = "leak",
kw_cutoff = 1,
lda_cutoff = 4,
#taxa_rank = 'Species'
)
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
ggsave(filename = paste0("Lefse_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
ggsave(filename = paste0("Lefse__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
# bar plot
plot_ef_bar(mm_lefse)
plot_ef_dot(mm_lefse)
ggsave(filename = paste0("LDA_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
ggsave(filename = paste0("LDA__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
pc <- plot_cladogram(mm_lefse, color = c(no_leak = "darkgreen", leak = "red")) +
theme(plot.margin = margin(0, 0, 0, 0))
pc
ggsave(filename = paste0("Cladogramm_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 45, height = 40, units = "cm" )
ggsave(filename = paste0("Cladogramm__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 45, height = 40, units = "cm" )
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
#transform = "log10",
wilcoxon_cutoff =1,
group = "leak",
kw_cutoff = 1,
lda_cutoff = 4,
taxa_rank = 'Species'
)
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
ggsave(filename = paste0("Lefse_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
ggsave(filename = paste0("Lefse__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
plot_ef_bar(mm_lefse)
plot_ef_dot(mm_lefse)
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
transform = "log10",
wilcoxon_cutoff =1,
group = "leak",
kw_cutoff = 1,
lda_cutoff = 4,
taxa_rank = 'Species'
)
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
# transform = "log10",
wilcoxon_cutoff =1,
group = "leak",
kw_cutoff = 1,
lda_cutoff = 4,
taxa_rank = 'Species'
)
head(marker_table(mm_lefse))
View(marker_table(mm_lefse))
p_abd <- plot_abundance(mm_lefse, group = "leak")
p_abd
ggsave(filename = paste0("Lefse_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
ggsave(filename = paste0("Lefse__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
plot_ef_dot(mm_lefse)
ggsave(filename = paste0("LDA_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
ggsave(filename = paste0("LDA__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 25, height = 20, units = "cm" )
pc <- plot_cladogram(mm_lefse, color = c(no_leak = "darkgreen", leak = "red")) +
theme(plot.margin = margin(0, 0, 0, 0))
mm_lefse <- run_lefse(
ps_mice,
norm = "CPM",
# transform = "log10",
wilcoxon_cutoff =1,
group = "leak",
kw_cutoff = 1,
lda_cutoff = 4,
#taxa_rank = 'Species'
)
pc <- plot_cladogram(mm_lefse, color = c(no_leak = "darkgreen", leak = "red")) +
theme(plot.margin = margin(0, 0, 0, 0))
pc
ggsave(filename = paste0("Cladogramm_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 45, height = 40, units = "cm" )
ggsave(filename = paste0("Cladogramm__ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 45, height = 40, units = "cm" )
(mm_lefse)
(mm_lefse)
plot_ef_dot(mm_lefse)
# bar plot
plot_ef_bar(mm_lefse)
View(sample_data(ps_mice))
mm_edger <- run_edger(
ps_mice,
group = "leak",
pvalue_cutoff = 0.1,
p_adjust = "fdr"
)
mm_edger
plot_ef_bar(mm_edger)
mm_edger <- run_edger(
ps_mice,
group = "leak",
pvalue_cutoff = 0.05,
p_adjust = "fdr"
)
mm_edger
#> microbiom
plot_ef_bar(mm_edger)
mm_edger
mm_edger <- run_edger(
ps_mice,
group = "leak",
pvalue_cutoff = 0.05,
p_adjust = "fdr"
)
mm_edger
#> microbiom
plot_ef_bar(mm_edger)
ggsave(filename = paste0("Log2FC_EdgeR_ALvs_NoAL_mice_post-fmt",".jpeg"), device = "jpeg", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 45, height = 40, units = "cm" )
ggsave(filename = paste0("Log2FC_EdgeR_ALvs_NoAL_mice_post-fmt_species",".tiff"), device = "tiff", path = "I:/Chercheurs/Santos_Manuela/Thibault/Experiments/fmt_effect/Analysis_output", width = 45, height = 40, units = "cm" )
getSequences(ps)[1:5]
ps
refseq(ps)
fwrite(refseq(ps))
head(as.data.frame(refseq(ps)))
seq <- as.data.frame(refseq(ps)))
seq <- as.data.frame(refseq(ps))
seq
Biostrings::DNAStringSet(taxa_names(ps))
taxa_names(ps)
Biostrings::DNAStringSet(taxa_names(ps))
dna <- Biostrings::DNAStringSet(taxa_names(ps))
library(Biostrings)
Biostrings::DNAStringSet(taxa_names(ps))
dna <- Biostrings::DNAStringSet(taxa_names(ps))
sample_data(ps)
taxa_names(ps)
as.data.frame(tax_table(ps))                                                                                                                                                                                                                                            x
as.data.frame(tax_table(ps))                                                                                                                                                                                                                                            x
as.data.frame(tax_table(ps))                                                                                                                                                                                                                                    x
as.data.frame(tax_table(ps))
seq
taxtable <- as.data.frame(tax_table(ps))
taxtable
seq
colnames(seq)
colnames(seq) <- "sequence"
colnames(seq)
taxtableref <-merge(taxtable,seq,by='row.names',all=TRUE)
taxtableref
write.csv(taxtableref, "tax_table_ref.csv")
setwd("I:/Chercheurs/Santos_Manuela/Thibault/Gut_Microbiota_analysis/R script/stackbar/package")
getwd()
library("devtools")
library(roxygen2)
setwd("I:/Chercheurs/Santos_Manuela/Thibault/Gut_Microbiota_analysis/R script/stackbar/package")
getwd()
create("StackbarExtended")
create("StackbarExtended")
setwd("StackbarExtended/")
getwd()
document()
setwd("C:/Users/p0103422/Documents/R/R_package")
getwd()
create("StackbarExtended")
setwd("StackbarExtended/")
getwd()
document()
getwd()
document()
install.packages(c("arrow", "bslib", "cli", "commonmark", "cpp11", "curl", "data.table", "DBI", "desc", "digest", "dplyr", "fansi", "future", "gert", "glue", "haven", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "later", "listenv", "parallelly", "processx", "progress", "ps", "R.oo", "R.utils", "ragg", "Rcpp", "RcppArmadillo", "RCurl", "readr", "reprex", "rlang", "rvest", "sass", "scales", "shiny", "signal", "sp", "stringi", "stringr", "tidyr", "timechange", "tinytex", "tuneR", "uuid", "vctrs", "vroom", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "bslib", "cli", "commonmark", "cpp11", "curl", "data.table", "DBI", "desc", "digest", "dplyr", "fansi", "future", "gert", "glue", "haven", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "later", "listenv", "parallelly", "processx", "progress", "ps", "R.oo", "R.utils", "ragg", "Rcpp", "RcppArmadillo", "RCurl", "readr", "reprex", "rlang", "rvest", "sass", "scales", "shiny", "signal", "sp", "stringi", "stringr", "tidyr", "timechange", "tinytex", "tuneR", "uuid", "vctrs", "vroom", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "bslib", "cli", "commonmark", "cpp11", "curl", "data.table", "DBI", "desc", "digest", "dplyr", "fansi", "future", "gert", "glue", "haven", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "later", "listenv", "parallelly", "processx", "progress", "ps", "R.oo", "R.utils", "ragg", "Rcpp", "RcppArmadillo", "RCurl", "readr", "reprex", "rlang", "rvest", "sass", "scales", "shiny", "signal", "sp", "stringi", "stringr", "tidyr", "timechange", "tinytex", "tuneR", "uuid", "vctrs", "vroom", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "bslib", "cli", "commonmark", "cpp11", "curl", "data.table", "DBI", "desc", "digest", "dplyr", "fansi", "future", "gert", "glue", "haven", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "later", "listenv", "parallelly", "processx", "progress", "ps", "R.oo", "R.utils", "ragg", "Rcpp", "RcppArmadillo", "RCurl", "readr", "reprex", "rlang", "rvest", "sass", "scales", "shiny", "signal", "sp", "stringi", "stringr", "tidyr", "timechange", "tinytex", "tuneR", "uuid", "vctrs", "vroom", "withr", "xfun", "xml2", "yaml", "zip"))
install.packages(c("arrow", "bslib", "cli", "commonmark", "cpp11", "curl", "data.table", "DBI", "desc", "digest", "dplyr", "fansi", "future", "gert", "glue", "haven", "htmlwidgets", "httpuv", "httr2", "igraph", "jsonlite", "later", "listenv", "parallelly", "processx", "progress", "ps", "R.oo", "R.utils", "ragg", "Rcpp", "RcppArmadillo", "RCurl", "readr", "reprex", "rlang", "rvest", "sass", "scales", "shiny", "signal", "sp", "stringi", "stringr", "tidyr", "timechange", "tinytex", "tuneR", "uuid", "vctrs", "vroom", "withr", "xfun", "xml2", "yaml", "zip"))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(c("DESeq2", "clusterProfiler", "org.Hs.eg.db", "AnnotationDbi"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "vctrs"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "vctrs"))
install.packages(c("cli", "dplyr", "fansi", "glue", "rlang", "vctrs"))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("pasilla")
pasCts <- system.file("data",
"pasilla_gene_counts.tsv", mustWork=TRUE)
pasCts <- system.file("pasilla_gene_counts.tsv", mustWork=TRUE)
ls
pasCts <- system.file("pasilla_gene_counts.tsv", mustWork=TRUE)
data("pasilla_gene_counts.tsv")
getwd()
data("data/pasilla_gene_counts.tsv")
pasCts <- system.file("data/pasilla_gene_counts.tsv", mustWork=TRUE)
pasCts <- system.file(".data/pasilla_gene_counts.tsv", mustWork=TRUE)
pasCts <- system.file("/data/pasilla_gene_counts.tsv", mustWork=TRUE)
pasCts <- system.file("D:/Github/StackbarExtended/StackbarExtended/data/pasilla_gene_counts.tsv", mustWork=TRUE)
read.csv("data/pasilla_gene_counts.tsv")
read.csv("data/pasilla_gene_counts.tsv", sep = "\t")
pasCts <- read.csv("data/pasilla_gene_counts.tsv", sep = "\t")
pasAnno <- read.csv("data/pasilla_sample_annotation.csv", sep = "\t")
View(pasAnno)
pasAnno <- read.csv("data/pasilla_sample_annotation.csv", sep = ",")
View(pasAnno)
cts <- as.matrix(read.csv(pasCts,sep="\t",row.names="gene_id"))
Cts <- as.matrix(read.csv("data/pasilla_gene_counts.tsv",row.names="gene_id"))
Cts <- as.matrix(read.csv("data/pasilla_gene_counts.tsv", row.names="gene_id"))
read.csv("data/pasilla_gene_counts.tsv", row.names="gene_id")
View(pasCts)
Cts <- as.matrix(read.csv("data/pasilla_gene_counts.tsv", rownames="gene_id"))
Cts <- as.matrix(read.csv("data/pasilla_gene_counts.tsv", row.names="gene_id"))
read.csv("data/pasilla_gene_counts.tsv", row.names="gene_id")
Cts <- as.matrix(read.csv("data/pasilla_gene_counts.tsv", row.names="gene_id", sep ="\t"))
View(Cts)
pasAnno <- read.csv("data/pasilla_sample_annotation.csv", sep = ",", row.names=1)
View(pasAnno)
coldata <- read.csv("data/pasilla_sample_annotation.csv", sep = ",", row.names=1)
coldata <- coldata[,c("condition","type")]
coldata$condition <- factor(coldata$condition)
coldata$type <- factor(coldata$type)
dds <- DESeqDataSetFromMatrix(countData = Cts,
colData = colData,
design = ~ condition)
library(DESeq2)
library(clusterProfiler)
library(org.Hs.eg.db)
dds <- DESeqDataSetFromMatrix(countData = Cts,
colData = colData,
design = ~ condition)
dds <- DESeqDataSetFromMatrix(countData = Cts,
colData = coldata,
design = ~ condition)
all(rownames(coldata) %in% colnames(cts))
all(rownames(coldata) %in% colnames(Cts))
rownames(coldata)
colnames(Cts)
rownames(coldata) <- sub("fb", "", rownames(coldata))
all(rownames(coldata) %in% colnames(cts))
cts <- as.matrix(read.csv("data/pasilla_gene_counts.tsv", row.names="gene_id", sep ="\t"))
coldata <- read.csv("data/pasilla_sample_annotation.csv", sep = ",", row.names=1)
coldata <- coldata[,c("condition","type")]
coldata$condition <- factor(coldata$condition)
coldata$type <- factor(coldata$type)
all(rownames(coldata) %in% colnames(Cts))
all(rownames(coldata) %in% colnames(cts))
rownames(coldata) <- sub("fb", "", rownames(coldata))
all(rownames(coldata) %in% colnames(cts))
cts <- cts[, rownames(coldata)]
dds <- DESeqDataSetFromMatrix(countData = Cts,
colData = coldata,
design = ~ condition)
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design = ~ condition)
# Run differential expression analysis
dds <- DESeq(dds)
res <- results(dds)
# Functional annotation and pathway analysis
# Identify significantly differentially expressed genes
sig_genes <- rownames(subset(res, padj < 0.05))
# Export gene expression results
res_df <- as.data.frame(res)
# Convert gene symbols to Entrez IDs (example for human genes)
entrez_ids <- mapIds(org.Hs.eg.db, keys = sig_genes, column = "ENTREZID", keytype = "SYMBOL", multiVals = "first")
keytypes(org.Hs.eg.db)
# Convert gene symbols to Entrez IDs (example for human genes)
entrez_ids <- mapIds(org.Hs.eg.db, keys = sig_genes, column = "ENTREZID",
#keytype = "SYMBOL",
multiVals = "first")
View(res)
View(res_df)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Dm.eg.db")
library(org.Dm.eg.db)
# Convert gene symbols to Entrez IDs (example for human genes)
entrez_ids <- mapIds(org.Dm.eg.db, keys = sig_genes, column = "ENTREZID",
keytype = "SYMBOL",
multiVals = "first")
# Convert gene symbols to Entrez IDs (example for human genes)
entrez_ids <- mapIds(org.Dm.eg.db, keys = sig_genes, column = "ENTREZID",
keytype = "FLYBASE",
multiVals = "first")
# GO enrichment analysis
go_enrichment <- enrichGO(gene = entrez_ids, OrgDb = org.Dm.eg.db, keyType = "ENTREZID", ont = "BP", pAdjustMethod = "BH", qvalueCutoff = 0.05)
# KEGG pathway analysis
kegg_pathway <- enrichKEGG(gene = entrez_ids, organism = 'dme', keyType = 'entrez', pAdjustMethod = "BH", qvalueCutoff = 0.05)
# KEGG pathway analysis
kegg_pathway <- enrichKEGG(gene = entrez_ids, organism = 'dme', keyType = 'entrez', pAdjustMethod = "BH", qvalueCutoff = 0.05)
library(clusterProfiler)
getOption("clusterProfiler.download.method")
install.packages("R.utils")
library(R.utils)
R.utils::setOption("clusterProfiler.download.method","auto")
# KEGG pathway analysis
kegg_pathway <- enrichKEGG(gene = entrez_ids, organism = 'dme', keyType = 'entrez', pAdjustMethod = "BH", qvalueCutoff = 0.05)
